"""Initial migration - create all tables

Revision ID: d0803b3034e1
Revises: 
Create Date: 2025-09-22 21:06:29.532068

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd0803b3034e1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'TRAINER', 'REVIEWER', name='userrole'), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('tasks',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('task_assignments',
    sa.Column('assignment_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('assignment_id')
    )
    op.create_table('video_sessions',
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('UPLOADING', 'PROCESSING', 'PENDING_REVIEW', 'APPROVED', 'REJECTED', 'FAILED', name='videosessionstatus'), nullable=False),
    sa.Column('raw_concatenated_s3_key', sa.String(length=1024), nullable=True),
    sa.Column('processed_1080p_s3_key', sa.String(length=1024), nullable=True),
    sa.Column('step_function_task_token', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('processing_jobs',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('step_function_execution_arn', sa.String(length=255), nullable=False),
    sa.Column('batch_job_id_concat', sa.String(length=255), nullable=True),
    sa.Column('batch_job_id_transcode', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('SUCCEEDED', 'FAILED', name='processingjobstatus'), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['video_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('job_id')
    )
    op.create_index(op.f('ix_processing_jobs_step_function_execution_arn'), 'processing_jobs', ['step_function_execution_arn'], unique=False)
    op.create_table('raw_clips',
    sa.Column('clip_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('s3_key', sa.String(length=1024), nullable=False),
    sa.Column('part_number', sa.Integer(), nullable=False),
    sa.Column('filesize_bytes', sa.Integer(), nullable=True),
    sa.Column('upload_completed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['video_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('clip_id'),
    sa.UniqueConstraint('session_id', 'part_number', name='_session_part_uc')
    )
    op.create_table('reviews',
    sa.Column('review_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('APPROVED', 'REJECTED', name='reviewstatus'), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['video_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('review_id'),
    sa.UniqueConstraint('session_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('raw_clips')
    op.drop_index(op.f('ix_processing_jobs_step_function_execution_arn'), table_name='processing_jobs')
    op.drop_table('processing_jobs')
    op.drop_table('video_sessions')
    op.drop_table('task_assignments')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
